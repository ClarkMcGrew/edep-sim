#!/bin/bash

# An example of a script using captain-control to generate lansce beam
# events in miniCAPTAIN.  This is actually pretty convenient to run
# from the command line.

source captain-control.bash

# Set the run number from the command line.
if [ ${#1} = 0 ]; then
    echo "Usage: $0 <run-number> <events>"
    captain-error "The run number must be provided."
fi

# Set the file name fields.
captain-experiment nb
captain-data-source pg
captain-run-type beam
captain-run-number ${1}

DETSIM_MACRO=$(captain-file g4in)
cat <<EOF >> ${DETSIM_MACRO} 
# Make sure to use a new seed.
/dsim/random/timeRandomSeed

# Run this in mini-captain
/dsim/control mini-captain 1.0

# Update the simulated geometry.
/dsim/update

####################################################################
# Define the LANCE neutron beam based on data from October 2013.
####################################################################

/gps/particle neutron
/gps/pos/type Beam
/gps/pos/shape Circle
/gps/pos/centre -400. 0. -15. cm
/gps/pos/radius 5. mm
/gps/pos/sigma_r 0.1 mm

/gps/ang/rot1 0 0 1
/gps/ang/rot2 0 1 0
/gps/ang/type beam1d
/gps/ene/type User
#using Flux_23-25_8_13_FP15R default unit for energy is MeV in GPS
/gps/ene/min 0 MeV
/gps/ene/max 800 MeV
/gps/hist/type energy
/gps/hist/point 1.5 2.4E7
/gps/hist/point 1.75 2.69E7
/gps/hist/point 2 2.44E7
/gps/hist/point 2.25 2.07E7
/gps/hist/point 2.5 2.04E7
/gps/hist/point 2.75 1.75E7
/gps/hist/point 3. 1.59E7
/gps/hist/point 3.5 1.43E7
/gps/hist/point 4. 1.20E7
/gps/hist/point 4.5 1.01E7
/gps/hist/point 5. 9.12E6
/gps/hist/point 5.5 9.24E6
/gps/hist/point 6. 6.57E6
/gps/hist/point 7. 5.34E6
/gps/hist/point 8. 4.26E6
/gps/hist/point 9. 3.35E6
/gps/hist/point 10. 2.68E6
/gps/hist/point 12.5 2.0E6
/gps/hist/point 15. 1.25E6
/gps/hist/point 17.5 1.05E6
/gps/hist/point 20. 8.88E5
/gps/hist/point 22.5 7.26E5
/gps/hist/point 25 7.03E5
/gps/hist/point 27.5 6.26E5
/gps/hist/point 30. 5.97E5
/gps/hist/point 35. 5.67E5
/gps/hist/point 40. 5.34E5
/gps/hist/point 45. 4.76E5
/gps/hist/point 50. 4.67E5
/gps/hist/point 55. 4.21E5
/gps/hist/point 60. 4.33E5
/gps/hist/point 70. 3.95E5
/gps/hist/point 80. 3.48E5
/gps/hist/point 90. 3.25E5
/gps/hist/point 100. 3.03E5
/gps/hist/point 125. 2.69E5
/gps/hist/point 150. 2.45E5
/gps/hist/point 175. 2.18E5
/gps/hist/point 200. 2.0E5
/gps/hist/point 225. 1.84E5
/gps/hist/point 250. 1.72E5
/gps/hist/point 275. 1.62E5
/gps/hist/point 300. 1.56E5
/gps/hist/point 350. 1.54E5
/gps/hist/point 400. 1.31E5
/gps/hist/point 450. 1.13E5
/gps/hist/point 500. 9.81E4
/gps/hist/point 550. 9.77E4
/gps/hist/point 600. 9.56E4
/gps/hist/point 800. 2.82E4
EOF

# Check if the number of events to generate should be added to the file.
if [ ${#2} = 0 ]; then
    echo "Usage: $0 <run-number> <events>"
    captain-error "The number of events must be provided"
else
    captain-log Generating ${2} events.
    cat >> ${DETSIM_MACRO} <<EOF
/run/beamOn ${2}
EOF
fi

#####################################################
# The is the meat of the script: Run the DETSIM
#####################################################
captain-process-detsim-macro ${DETSIM_MACRO}

#####################################################
# Try to run ELECSIM, calibration, and reconstruction.
#####################################################
captain-run-reconstruction
